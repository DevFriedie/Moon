game.Workspace.StreamingEnabled = false

repeat
	task.wait()
until game:IsLoaded()

--// Rayfield
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"), true)()
if Rayfield then
	local Window = Rayfield:CreateWindow({
		Name = "Moon",
		Icon = 125889880312564,
		LoadingTitle = "Moon",
		LoadingSubtitle = "by Friedie",
		ShowText = "Rayfield",
		Theme = "Default",
	})

	--// References
	local Main = Window:CreateTab("Main", "rewind")
	local Game = Window:CreateTab("Game", "rewind")
	local Miscellaneous = Main:CreateSection("Miscellaneous")
	local Miscellaneous = Game:CreateSection("Miscellaneous")

	--// Tables
	local ItemsList = {}
	local PlayersList = {}

	--// Scripts
	local SliderWalkSpeed = Main:CreateSlider({
		Name = "WalkSpeed",
		Range = { 16, 250 },
		Increment = 1,
		Suffix = "WalkSpeed",
		CurrentValue = 16,
		Flag = "",
		Callback = function(Value)
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
		end,
	})

	local SliderJumpPower = Main:CreateSlider({
		Name = "JumpPower",
		Range = { 50, 250 },
		Increment = 1,
		Suffix = "JumpPower",
		CurrentValue = 50,
		Flag = "",
		Callback = function(Value)
			game.Players.LocalPlayer.Character.Humanoid.UseJumpPower = true
			game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
		end,
	})

	local DropdownTeleport = Main:CreateDropdown({
		Name = "Teleport",
		Options = { "" },
		CurrentOption = { "" },
		MultipleOptions = false,
		Flag = "",
		Callback = function(Options)
			if Options[1] then
				if game.Players[Options[1]] then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
						game.Players[Options[1]].Character.HumanoidRootPart.CFrame
				end
			end
		end,
	})

	local ButtonDestroy = Main:CreateButton({
		Name = "Destroy",
		Callback = function()
			Rayfield:Destroy()
		end,
	})

	local ButtonFuel = Game:CreateButton({
		Name = "Fuel",
		Callback = function()
			task.spawn(function()
				for i, Model in ipairs(game.Workspace.Items:GetChildren()) do
					task.spawn(function()
						if Model:GetAttribute("BurnFuel") then
							game:GetService("ReplicatedStorage").RemoteEvents.RequestStartDraggingItem:FireServer(Model)
							task.wait(0.25)
							Model.PrimaryPart.CFrame = game.Workspace.Map.Campground.MainFire.Center.CFrame + Vector3.new(0, 20, 0)
							task.wait(0.25)
							game:GetService("ReplicatedStorage").RemoteEvents.StopDraggingItem:FireServer(Model)
							game.Debris:AddItem(Model, 10)
						end
					end)
				end
			end)
		end,
	})

	local ButtonCraft = Game:CreateButton({
		Name = "Craft",
		Callback = function()
			task.spawn(function()
				for i, Model in ipairs(game.Workspace.Items:GetChildren()) do
					task.spawn(function()
						if Model.Name == "Log" or Model:GetAttribute("Scrappable") or Model.Name == "Cultist Gem" then
							game:GetService("ReplicatedStorage").RemoteEvents.RequestStartDraggingItem:FireServer(Model)
							task.wait(0.25)
							Model.PrimaryPart.CFrame = game.Workspace.Map.Campground.CraftingBench.TouchZone.CFrame + Vector3.new(0, 3, -2)
							task.wait(0.25)
							game:GetService("ReplicatedStorage").RemoteEvents.StopDraggingItem:FireServer(Model)
							game.Debris:AddItem(Model, 10)
						end
					end)
				end
			end)
		end,
	})

	local DropdownItem = Game:CreateDropdown({
		Name = "Item",
		Options = { "" },
		CurrentOption = { "" },
		MultipleOptions = false,
		Flag = "",
		Callback = function(Options)
			if Options[1] then
				task.spawn(function()
					for i, Model in ipairs(game.Workspace.Items:GetChildren()) do
						task.spawn(function()
							if Model.PrimaryPart and Model.Name == Options[1] then
								game:GetService("ReplicatedStorage").RemoteEvents.RequestStartDraggingItem:FireServer(Model)
								task.wait(0.25)
								Model.PrimaryPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
								task.wait(0.25)
								game:GetService("ReplicatedStorage").RemoteEvents.StopDraggingItem:FireServer(Model)
							end
						end)
					end
				end)
			end
		end,
	})

	local ButtonInvincible = Game:CreateButton({
		Name = "Invincible",
		Callback = function()
			task.spawn(function()
				while task.wait(10) do
					game:GetService("ReplicatedStorage").RemoteEvents.DamagePlayer:FireServer(-math.huge)
				end
			end)
		end,
	})

	task.spawn(function()
		for i, Player in game:GetService("Players"):GetPlayers() do
			if Player.Name ~= game.Players.LocalPlayer.Name and not table.find(PlayersList, Player.Name) then
				table.insert(PlayersList, Player.Name)
				DropdownTeleport:Refresh(PlayersList)
			end
		end
	end)

	game:GetService("Players").PlayerAdded:Connect(function(Player: Player)
		if Player.Name ~= game.Players.LocalPlayer.Name and not table.find(PlayersList, Player.Name) then
			table.insert(PlayersList, Player.Name)
			DropdownTeleport:Refresh(PlayersList)
		end
	end)

	game:GetService("Players").PlayerRemoving:Connect(function(Player: Player)
		if table.find(PlayersList, Player.Name) then
			table.remove(PlayersList, table.find(PlayersList, Player.Name))
			DropdownTeleport:Refresh(PlayersList)
		end
	end)

	task.spawn(function()
		for i, Model in ipairs(game.Workspace.Items:GetChildren()) do
			if not table.find(ItemsList, Model.Name) then
				table.insert(ItemsList, Model.Name)
				DropdownItem:Refresh(ItemsList)
			end
		end
	end)

	game.Workspace.Items.ChildAdded:Connect(function(Model : Model)
		if not table.find(ItemsList, Model.Name) then
			table.insert(ItemsList, Model.Name)
			DropdownItem:Refresh(ItemsList)
		end
	end)

	game.Workspace.Items.ChildRemoved:Connect(function(Model : Model)
		if table.find(ItemsList, Model.Name) then
			table.remove(ItemsList, table.find(ItemsList, Model.Name))
			DropdownItem:Refresh(ItemsList)
		end
	end)
end