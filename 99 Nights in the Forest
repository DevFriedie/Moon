repeat
	task.wait()
until game:IsLoaded()

--// Rayfield
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"), true)()
if Rayfield then
	local Window = Rayfield:CreateWindow({
		Name = "Moon",
		Icon = 125889880312564,
		LoadingTitle = "Moon",
		LoadingSubtitle = "by Friedie",
		ShowText = "Rayfield",
		Theme = "Default",
	})

	--// Variables
	local Main = Window:CreateTab("Main", "rewind")
	local Game = Window:CreateTab("Game", "rewind")
	local Miscellaneous = Main:CreateSection("Miscellaneous")
	local Miscellaneous = Game:CreateSection("Miscellaneous")
	local PlayersList = {}

	--// Scripts
	local SliderWalkSpeed = Main:CreateSlider({
		Name = "WalkSpeed",
		Range = { 16, 250 },
		Increment = 5,
		Suffix = "WalkSpeed",
		CurrentValue = 16,
		Flag = "",
		Callback = function(Value)
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
		end,
	})

	local SliderJumpPower = Main:CreateSlider({
		Name = "JumpPower",
		Range = { 50, 500 },
		Increment = 5,
		Suffix = "JumpPower",
		CurrentValue = 50,
		Flag = "",
		Callback = function(Value)
			game.Players.LocalPlayer.Character.Humanoid.UseJumpPower = true
			game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
		end,
	})

	local ButtonEsp = Main:CreateButton({
		Name = "Esp",
		Callback = function()
			for _, Player in pairs(game.Players:GetPlayers()) do
				if Player.Name ~= game:GetService("Players").LocalPlayer.Name then
					local Character = Player.Character
					if Character and Character:FindFirstChild("Head") then
						if not Character.Head:FindFirstChild("Esp") then
							local BillboardGui = Instance.new("BillboardGui")
							local TextLabel = Instance.new("TextLabel")
							BillboardGui.Name = "Esp"
							BillboardGui.Parent = Character.Head
							BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
							BillboardGui.Active = true
							BillboardGui.AlwaysOnTop = true
							BillboardGui.LightInfluence = 1.000
							BillboardGui.StudsOffset = Vector3.new(0, 2.5, 0)
							BillboardGui.Size = UDim2.new(0, 100, 0, 50)
							BillboardGui.Adornee = Character.Head

							TextLabel.Parent = BillboardGui
							TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
							TextLabel.BackgroundTransparency = 1.000
							TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
							TextLabel.BorderSizePixel = 0
							TextLabel.Size = UDim2.new(1, 0, 1, 0)
							TextLabel.Font = Enum.Font.SourceSans
							TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
							TextLabel.TextScaled = true
							TextLabel.TextSize = 14.000
							TextLabel.TextStrokeTransparency = 0.500
							TextLabel.TextWrapped = true
							TextLabel.Text = Player.Name
						end

						if not Character:FindFirstChild("Esp") then
							local Highlight = Instance.new("Highlight")
							Highlight.Name = "Esp"
							Highlight.Parent = game:GetService("ReplicatedFirst")
							Highlight.OutlineColor = Color3.fromRGB(255, 0, 0)
							Highlight.Adornee = Character
						end
					end
				end
			end
		end,
	})

	local DropdownTeleport = Main:CreateDropdown({
		Name = "Teleport",
		Options = { "" },
		CurrentOption = { "" },
		MultipleOptions = false,
		Flag = "",
		Callback = function(Options)
			if Options then
				print(Options)
			end
		end,
	})

	local ButtonVoiceChat = Main:CreateButton({
		Name = "Voice Chat",
		Callback = function()
			game:GetService("VoiceChatService"):joinVoice()
		end,
	})

	local ButtonDestroy = Main:CreateButton({
		Name = "Voice Chat",
		Callback = function()
			Rayfield:Destroy()
		end,
	})

	game:GetService("Players").PlayerAdded:Connect(function(Player: Player)
		table.insert(PlayersList, Player.Name)
		DropdownTeleport:Refresh(PlayersList)
		DropdownTeleport:Set("")
		print("Teleport Added: " .. Player.Name)
	end)

	game:GetService("Players").PlayerRemoving:Connect(function(Player: Player)
		table.remove(PlayersList, table.find(PlayersList, Player.Name))
		DropdownTeleport:Refresh(PlayersList)
		DropdownTeleport:Set("")
		print("Teleport Removed: " .. Player.Name)
	end)

	for i, Player in game:GetService("Players"):GetPlayers() do
		table.insert(PlayersList, Player.Name)
		DropdownTeleport:Refresh(PlayersList)
		DropdownTeleport:Set("")
		print("Teleport Added: " .. Player.Name)
	end
end
